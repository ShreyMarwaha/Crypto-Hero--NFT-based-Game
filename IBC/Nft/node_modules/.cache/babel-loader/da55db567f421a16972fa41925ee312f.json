{"ast":null,"code":"import _toConsumableArray from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Color from \"../abis/Color.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"\",\n      contract: null,\n      totalSupply: 0,\n      Heros: []\n    };\n    return _this;\n  }\n  /**► Called on server side, as soon as component mounts */\n\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n    /**▶ Checking for Metamask Installation for login */\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                //the old way\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } //not found\n                else {\n                    window.alert(\"Non-Ethereum browser derected. You should consider trying MetaMask!\");\n                  }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, contract, totalSupply, showInfo, i, hero;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Color.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                abi = Color.abi;\n                address = networkData.address;\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 16;\n                return contract.methods.totalSupply().call();\n\n              case 16:\n                totalSupply = _context3.sent;\n                this.setState(totalSupply); //load colors\n\n                showInfo = false;\n                i = 0;\n\n              case 20:\n                if (!(i < totalSupply)) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                _context3.next = 23;\n                return contract.methods.allHero(i).call();\n\n              case 23:\n                hero = _context3.sent;\n\n                if (showInfo) {\n                  console.log(hero.color, hero.owner, hero.attack, hero.defence, hero.health);\n                }\n\n                this.setState({\n                  Heros: [].concat(_toConsumableArray(this.state.Heros), [hero])\n                });\n\n              case 26:\n                i++;\n                _context3.next = 20;\n                break;\n\n              case 29:\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert(\"Smart contract not deployed to detected network.\");\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"mint\",\n    value: function () {\n      var _mint = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(color) {\n        var last_idx, hero;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(\"minting:\", color);\n                this.state.contract.methods.mint(color).send({\n                  from: this.state.account\n                });\n                _context4.next = 4;\n                return this.state.contract.methods.totalSupply().call();\n\n              case 4:\n                _context4.t0 = _context4.sent;\n                last_idx = _context4.t0 - 1;\n                _context4.next = 8;\n                return this.state.contract.methods.allHero(last_idx).call();\n\n              case 8:\n                hero = _context4.sent;\n                console.log(this.state.Heros);\n                this.setState({\n                  Heros: [].concat(_toConsumableArray(this.state.Heros), [hero])\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function mint(_x) {\n        return _mint.apply(this, arguments);\n      }\n\n      return mint;\n    }()\n  }, {\n    key: \"fight\",\n    value: function () {\n      var _fight = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(e) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                e.preventDefault(); // const hero = await this.state.contract.methods.allHero(0).call();\n\n                console.log(\"in fight\"); // console.log(await this.state.contract.methods.allHero(0).call());\n                // const my = Math.random(this.state.Heros.length);\n                // const other = Math.random(this.state.Heros.length);\n                // my = this.state.Heros[my];\n                // other = this.state.Heros[other];\n                // console.log(my.color, my.health);\n                // console.log(other.color, other.health);\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function fight(_x2) {\n        return _fight.apply(this, arguments);\n      }\n\n      return fight;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.account) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n          href: \"#/\",\n          target: \"_self\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"An AF Tea\"), React.createElement(\"ul\", {\n          className: \"navbar-nav px-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          className: \"text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          id: \"account\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Account: \", this.state.account))))), React.createElement(\"div\", {\n          className: \"container-fluid mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"main\", {\n          role: \"main\",\n          className: \"col-lg-12 d-flex text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content mr-auto ml-auto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"Issue Hero Token\"), React.createElement(\"form\", {\n          onSubmit: function onSubmit(event) {\n            event.preventDefault(); // const color = this.color.value;\n\n            var color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\n            _this2.mint(color);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"fomr-control mb-1\",\n          placeholder: \"eg. #FFFFFF\",\n          ref: function ref(input) {\n            return _this2.color = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-block btn-primary\",\n          value: \"MINT\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }))))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"row text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, this.state.Heros.map(function (hero, key) {\n          function showStats() {\n            // console.log(hero.color, hero.attack);\n            var stats = \"Attack: \" + hero.attack + \" Defense: \" + hero.defence + \" Health: \" + hero.health;\n            return React.createElement(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178\n              },\n              __self: this\n            }, stats, \"!\"); //TODO: show stats on hover\n          }\n\n          console.log(hero.owner);\n          console.log(_this2.state.account);\n\n          if (hero.owner === _this2.state.account) {\n            //BUG: Conditional rendering not working\n            return React.createElement(\"div\", {\n              key: key,\n              className: \"col-md-3 mb-3\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"token\",\n              style: {\n                backgroundColor: hero.color\n              },\n              onMouseOver: showStats,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 190\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 197\n              },\n              __self: this\n            }, hero.color));\n          }\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-block btn-primary\",\n          onClick: this.fight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"Fight!\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, \"Login & verify your Metamask account.\");\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/src/components/App.js"],"names":["React","Component","Web3","Color","App","props","state","account","contract","totalSupply","Heros","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","networks","abi","address","Contract","methods","call","showInfo","i","allHero","hero","console","log","color","owner","attack","defence","health","mint","send","from","last_idx","e","preventDefault","event","Math","floor","random","toString","input","map","key","showStats","stats","backgroundColor","fight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Color from \"../abis/Color.json\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            account: \"\",\n            contract: null,\n            totalSupply: 0,\n            Heros: []\n        };\n    }\n\n    /**► Called on server side, as soon as component mounts */\n    async componentWillMount() {\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n\n    /**▶ Checking for Metamask Installation for login */\n    async loadWeb3() {\n        //new way\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        }\n        //the old way\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        }\n        //not found\n        else {\n            window.alert(\n                \"Non-Ethereum browser derected. You should consider trying MetaMask!\"\n            );\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        this.setState({ account: accounts[0] });\n\n        const networkId = await web3.eth.net.getId();\n        const networkData = Color.networks[networkId];\n        if (networkData) {\n            const abi = Color.abi;\n            const address = networkData.address;\n            const contract = new web3.eth.Contract(abi, address);\n            this.setState({ contract });\n            const totalSupply = await contract.methods.totalSupply().call();\n            this.setState(totalSupply);\n            //load colors\n\n            const showInfo = false;\n            for (var i = 0; i < totalSupply; i++) {\n                const hero = await contract.methods.allHero(i).call();\n                if (showInfo) {\n                    console.log(\n                        hero.color,\n                        hero.owner,\n                        hero.attack,\n                        hero.defence,\n                        hero.health\n                    );\n                }\n                this.setState({\n                    Heros: [...this.state.Heros, hero]\n                });\n            }\n        } else {\n            window.alert(\"Smart contract not deployed to detected network.\");\n        }\n    }\n    async mint(color) {\n        console.log(\"minting:\", color);\n        this.state.contract.methods\n            .mint(color)\n            .send({ from: this.state.account });\n\n        const last_idx =\n            (await this.state.contract.methods.totalSupply().call()) - 1;\n        const hero = await this.state.contract.methods.allHero(last_idx).call();\n        console.log(this.state.Heros);\n        this.setState({ Heros: [...this.state.Heros, hero] });\n    }\n    async fight(e) {\n        e.preventDefault();\n        // const hero = await this.state.contract.methods.allHero(0).call();\n        console.log(\"in fight\");\n        // console.log(await this.state.contract.methods.allHero(0).call());\n        // const my = Math.random(this.state.Heros.length);\n        // const other = Math.random(this.state.Heros.length);\n        // my = this.state.Heros[my];\n        // other = this.state.Heros[other];\n        // console.log(my.color, my.health);\n        // console.log(other.color, other.health);\n    }\n\n    render() {\n        if (this.state.account) {\n            return (\n                <div>\n                    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                        <a\n                            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                            href=\"#/\"\n                            target=\"_self\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            An AF Tea\n                        </a>\n                        <ul className=\"navbar-nav px-3\">\n                            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                                <small className=\"text-white\">\n                                    <span id=\"account\">\n                                        Account: {this.state.account}\n                                    </span>\n                                </small>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n                            <main\n                                role=\"main\"\n                                className=\"col-lg-12 d-flex text-center\"\n                            >\n                                <div className=\"content mr-auto ml-auto\">\n                                    <h1>Issue Hero Token</h1>\n                                    <form\n                                        onSubmit={(event) => {\n                                            event.preventDefault();\n                                            // const color = this.color.value;\n                                            const color =\n                                                \"#\" +\n                                                Math.floor(\n                                                    Math.random() * 16777215\n                                                ).toString(16);\n\n                                            this.mint(color);\n                                        }}\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            className=\"fomr-control mb-1\"\n                                            placeholder=\"eg. #FFFFFF\"\n                                            ref={(input) =>\n                                                (this.color = input)\n                                            }\n                                        />\n                                        <input\n                                            type=\"submit\"\n                                            className=\"btn btn-block btn-primary\"\n                                            value=\"MINT\"\n                                        />\n                                    </form>\n                                </div>\n                            </main>\n                        </div>\n                        <hr />\n                        <div className=\"row text-center\">\n                            {this.state.Heros.map((hero, key) => {\n                                function showStats() {\n                                    // console.log(hero.color, hero.attack);\n                                    const stats =\n                                        \"Attack: \" +\n                                        hero.attack +\n                                        \" Defense: \" +\n                                        hero.defence +\n                                        \" Health: \" +\n                                        hero.health;\n                                    return <h1>{stats}!</h1>;\n                                    //TODO: show stats on hover\n                                }\n                                console.log(hero.owner);\n                                console.log(this.state.account);\n                                if (hero.owner === this.state.account) {\n                                    //BUG: Conditional rendering not working\n                                    return (\n                                        <div\n                                            key={key}\n                                            className=\"col-md-3 mb-3\"\n                                        >\n                                            <div\n                                                className=\"token\"\n                                                style={{\n                                                    backgroundColor: hero.color\n                                                }}\n                                                onMouseOver={showStats}\n                                            ></div>\n                                            <div>{hero.color}</div>\n                                        </div>\n                                    );\n                                }\n                            })}\n                        </div>\n                    </div>\n\n                    <div>\n                        <button\n                            className=\"btn btn-block btn-primary\"\n                            onClick={this.fight}\n                        >\n                            Fight!\n                        </button>\n                    </div>\n                </div>\n            );\n        } else {\n            return <div>Login & verify your Metamask account.</div>;\n        }\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}