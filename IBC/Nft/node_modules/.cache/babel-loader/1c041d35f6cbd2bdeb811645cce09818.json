{"ast":null,"code":"import _toConsumableArray from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Color from \"../abis/Color.json\";\nimport { ReactComponent as Logo } from \"@svgr/webpack?-prettier,-svgo!./av2.svg\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.countMint = function () {\n      var counter = 0;\n\n      for (var i = 0; i < _this.state.Heros.length; i++) {\n        if (_this.state.Heros[i].owner === _this.state.account) counter++;\n      }\n\n      if (counter < 30) return true;else {\n        alert(\"You have exhausted max limit of Minting. (Limit = 30)\");\n        return false;\n      }\n    };\n\n    _this.state = {\n      account: \"\",\n      contract: null,\n      totalSupply: 0,\n      Heros: [],\n      button: 0\n    };\n    return _this;\n  }\n  /**► Called on server side, as soon as component mounts */\n\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n    /**▶ Checking for Metamask Installation for login */\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                //the old way\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } //not found\n                else {\n                    window.alert(\"Non-Ethereum browser derected. You should consider trying MetaMask!\");\n                  }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, contract, totalSupply, count, i, hero;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Color.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                abi = Color.abi;\n                address = networkData.address;\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 16;\n                return contract.methods.totalSupply().call();\n\n              case 16:\n                totalSupply = _context3.sent;\n                //load colors\n                count = 0;\n                i = 0;\n\n              case 19:\n                if (!(i < totalSupply)) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                _context3.next = 22;\n                return contract.methods.allHero(i).call();\n\n              case 22:\n                hero = _context3.sent;\n                if (this.state.account === hero.owner) count++;\n                this.setState({\n                  Heros: [].concat(_toConsumableArray(this.state.Heros), [hero])\n                });\n\n              case 25:\n                i++;\n                _context3.next = 19;\n                break;\n\n              case 28:\n                this.setState({\n                  totalSupply: count\n                });\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert(\"Smart contract not deployed to detected network.\");\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"mint\",\n    value: function () {\n      var _mint = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(color) {\n        var last_idx, hero;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(\"minting:\", color);\n                _context4.next = 3;\n                return this.state.contract.methods.mint(color).send({\n                  from: this.state.account\n                });\n\n              case 3:\n                _context4.next = 5;\n                return this.state.contract.methods.totalSupply().call();\n\n              case 5:\n                _context4.t0 = _context4.sent;\n                last_idx = _context4.t0 - 1;\n                _context4.next = 9;\n                return this.state.contract.methods.allHero(last_idx).call();\n\n              case 9:\n                hero = _context4.sent;\n                this.setState({\n                  Heros: [].concat(_toConsumableArray(this.state.Heros), [hero])\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function mint(_x) {\n        return _mint.apply(this, arguments);\n      }\n\n      return mint;\n    }()\n  }, {\n    key: \"sellNFT\",\n    value: function () {\n      var _sellNFT = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(index) {\n        var i;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(index === undefined || index < 0)) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 2:\n                i = 0;\n\n              case 3:\n                if (!(i < this.state.Heros.length)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                if (!(this.state.Heros[i].owner === this.state.account)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                index -= 1;\n\n                if (!(index < 0)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                _context5.next = 9;\n                return this.state.contract.mehtods.sellNFT(this.state.Heros[i].color).call();\n\n              case 9:\n                this.state.Heros.splice(index, i);\n                return _context5.abrupt(\"return\");\n\n              case 11:\n                i++;\n                _context5.next = 3;\n                break;\n\n              case 14:\n                if (!(index > 0)) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                alert(\"Enter a valid index. Index out of range.\");\n                return _context5.abrupt(\"return\");\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function sellNFT(_x2) {\n        return _sellNFT.apply(this, arguments);\n      }\n\n      return sellNFT;\n    }()\n  }, {\n    key: \"fight\",\n    value: function () {\n      var _fight = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(index) {\n        var myHero, i, op_health, op_attack, op_defence, color, colorExists, myScore, op_score;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(index === undefined || index < 0)) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 2:\n                i = 0;\n\n              case 3:\n                if (!(i < this.state.Heros.length)) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                if (!(this.state.Heros[i].owner === this.state.account)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                index -= 1;\n\n                if (!(index < 0)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                myHero = this.state.Heros[i];\n                return _context6.abrupt(\"break\", 12);\n\n              case 9:\n                i++;\n                _context6.next = 3;\n                break;\n\n              case 12:\n                if (!(index > 0)) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                alert(\"Enter a valid index. Index out of range.\");\n                return _context6.abrupt(\"return\");\n\n              case 15:\n                op_health = Math.floor(Math.random() * 101);\n                op_attack = Math.floor(Math.random() * 101);\n                op_defence = Math.floor(Math.random() * 101);\n                color = this.state.Heros[0];\n                colorExists = true;\n\n              case 20:\n                if (!colorExists) {\n                  _context6.next = 33;\n                  break;\n                }\n\n                color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n                colorExists = false;\n                i = 0;\n\n              case 24:\n                if (!(i < this.state.Heros.length)) {\n                  _context6.next = 31;\n                  break;\n                }\n\n                if (!(this.state.Heros[i].color === color)) {\n                  _context6.next = 28;\n                  break;\n                }\n\n                colorExists = true;\n                return _context6.abrupt(\"break\", 31);\n\n              case 28:\n                i++;\n                _context6.next = 24;\n                break;\n\n              case 31:\n                _context6.next = 20;\n                break;\n\n              case 33:\n                myScore = +myHero.health + +myHero.defence - op_attack;\n                op_score = op_health + op_defence - +myHero.attack;\n                console.log(\"My Hero\", +myHero.health, +myHero.attack, +myHero.defence, myScore, myHero.color);\n                console.log(\"Opponent Hero\", op_health, op_attack, op_defence, op_score, color);\n\n                if (myScore > op_score) {\n                  console.log(\"You win!, The token is now yours.\");\n                  this.mint(color);\n                } else {\n                  console.log(\"You Loose. Better Luck next time.  \");\n                }\n\n              case 38:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function fight(_x3) {\n        return _fight.apply(this, arguments);\n      }\n\n      return fight;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.account) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n          href: \"#/\",\n          target: \"_self\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"An AF Tea\"), React.createElement(\"ul\", {\n          className: \"navbar-nav px-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          className: \"text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          id: \"account\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Account: \", this.state.account))))), React.createElement(\"div\", {\n          className: \"container-fluid mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"main\", {\n          role: \"main\",\n          className: \"col-lg-12 d-flex text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content mr-auto ml-auto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"Issue Hero Token\"), React.createElement(\"form\", {\n          onSubmit: function onSubmit(event) {\n            event.preventDefault();\n            var color = _this2.state.Heros[0];\n            var colorExists = true;\n\n            while (colorExists) {\n              color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n              colorExists = false;\n\n              for (var i = 0; i < _this2.state.Heros.length; i++) {\n                if (_this2.state.Heros[i].color === color) {\n                  colorExists = true;\n                  break;\n                }\n              }\n            }\n\n            if (_this2.countMint()) _this2.mint(color); // window.location.reload();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-block btn-primary\",\n          value: \"MINT  (\" + this.state.totalSupply + \" / 30)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }))))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"row text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, this.state.Heros.map(function (hero, key) {\n          if (hero.owner === _this2.state.account) {\n            return React.createElement(\"div\", {\n              key: key,\n              className: \"col-md-3 mb-3\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"a\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 204\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"token\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205\n              },\n              __self: this\n            }, React.createElement(Logo, {\n              fill: hero.color,\n              stroke: \"black\",\n              strokeWidth: \"2px\",\n              width: \"50%\",\n              height: \"50%\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 206\n              },\n              __self: this\n            })), React.createElement(\"div\", {\n              className: \"heroHex\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 208\n              },\n              __self: this\n            }, hero.color, React.createElement(\"div\", {\n              className: \"b\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210\n              },\n              __self: this\n            }, React.createElement(\"h6\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 211\n              },\n              __self: this\n            }, \"Health: \", +hero.health), React.createElement(\"h6\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212\n              },\n              __self: this\n            }, \"Attack: \", +hero.attack), React.createElement(\"h6\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 213\n              },\n              __self: this\n            }, \"Defence: \", +hero.defence)))));\n          }\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: function onSubmit(event) {\n            event.preventDefault();\n\n            if (state.button === 1) {\n              var index = _this2.index.value;\n\n              _this2.fight(index);\n            }\n\n            if (state.button === 2) {\n              console.log(\"Button 2 clicked!\");\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control mb-1\",\n          placeholder: \"Enter index of one of the token to fight. (Default = 0)\",\n          ref: function ref(input) {\n            _this2.index = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.state.button = 1;\n          },\n          type: \"submit\",\n          name: \"btn1\",\n          value: \"wow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, \"FIGHT\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.state.button = 2;\n          },\n          type: \"submit\",\n          name: \"btn2\",\n          value: \"oh no\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \"SELL\"), React.createElement(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-block btn-primary\",\n          value: \"FIGHT\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"Login & verify your Metamask account.\");\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/src/components/App.js"],"names":["React","Component","Web3","Color","App","props","countMint","counter","i","state","Heros","length","owner","account","alert","contract","totalSupply","button","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","eth","getAccounts","accounts","setState","net","getId","networkId","networkData","networks","abi","address","Contract","methods","call","count","allHero","hero","color","console","log","mint","send","from","last_idx","index","undefined","mehtods","sellNFT","splice","myHero","op_health","Math","floor","random","op_attack","op_defence","colorExists","toString","myScore","health","defence","op_score","attack","event","preventDefault","map","key","value","fight","input"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Color from \"../abis/Color.json\";\nimport { ReactComponent as Logo } from \"./av2.svg\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            account: \"\",\n            contract: null,\n            totalSupply: 0,\n            Heros: [],\n            button: 0\n        };\n    }\n\n    /**► Called on server side, as soon as component mounts */\n    async componentWillMount() {\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n\n    /**▶ Checking for Metamask Installation for login */\n    async loadWeb3() {\n        //new way\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        }\n        //the old way\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        }\n        //not found\n        else {\n            window.alert(\"Non-Ethereum browser derected. You should consider trying MetaMask!\");\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        this.setState({ account: accounts[0] });\n\n        const networkId = await web3.eth.net.getId();\n        const networkData = Color.networks[networkId];\n        if (networkData) {\n            const abi = Color.abi;\n            const address = networkData.address;\n            const contract = new web3.eth.Contract(abi, address);\n            this.setState({ contract });\n            const totalSupply = await contract.methods.totalSupply().call();\n\n            //load colors\n            let count = 0;\n            for (var i = 0; i < totalSupply; i++) {\n                const hero = await contract.methods.allHero(i).call();\n                if (this.state.account === hero.owner) count++;\n                this.setState({\n                    Heros: [...this.state.Heros, hero]\n                });\n            }\n            this.setState({ totalSupply: count });\n        } else {\n            window.alert(\"Smart contract not deployed to detected network.\");\n        }\n    }\n    async mint(color) {\n        console.log(\"minting:\", color);\n\n        await this.state.contract.methods.mint(color).send({ from: this.state.account });\n\n        const last_idx = (await this.state.contract.methods.totalSupply().call()) - 1;\n        const hero = await this.state.contract.methods.allHero(last_idx).call();\n        this.setState({ Heros: [...this.state.Heros, hero] });\n    }\n    countMint = () => {\n        let counter = 0;\n        for (var i = 0; i < this.state.Heros.length; i++) {\n            if (this.state.Heros[i].owner === this.state.account) counter++;\n        }\n        if (counter < 30) return true;\n        else {\n            alert(\"You have exhausted max limit of Minting. (Limit = 30)\");\n            return false;\n        }\n    };\n    async sellNFT(index) {\n        if (index === undefined || index < 0) return;\n\n        for (var i = 0; i < this.state.Heros.length; i++) {\n            if (this.state.Heros[i].owner === this.state.account) {\n                index -= 1;\n                if (index < 0) {\n                    await this.state.contract.mehtods.sellNFT(this.state.Heros[i].color).call();\n                    this.state.Heros.splice(index, i);\n                    return;\n                }\n            }\n        }\n        if (index > 0) {\n            alert(\"Enter a valid index. Index out of range.\");\n            return;\n        }\n    }\n    async fight(index) {\n        if (index === undefined || index < 0) return;\n        let myHero;\n        for (var i = 0; i < this.state.Heros.length; i++) {\n            if (this.state.Heros[i].owner === this.state.account) {\n                index -= 1;\n                if (index < 0) {\n                    myHero = this.state.Heros[i];\n                    break;\n                }\n            }\n        }\n        if (index > 0) {\n            alert(\"Enter a valid index. Index out of range.\");\n            return;\n        }\n\n        const op_health = Math.floor(Math.random() * 101);\n        const op_attack = Math.floor(Math.random() * 101);\n        const op_defence = Math.floor(Math.random() * 101);\n        let color = this.state.Heros[0];\n        let colorExists = true;\n        while (colorExists) {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colorExists = false;\n            for (i = 0; i < this.state.Heros.length; i++)\n                if (this.state.Heros[i].color === color) {\n                    colorExists = true;\n                    break;\n                }\n        }\n\n        const myScore = +myHero.health + +myHero.defence - op_attack;\n        const op_score = op_health + op_defence - +myHero.attack;\n        console.log(\"My Hero\", +myHero.health, +myHero.attack, +myHero.defence, myScore, myHero.color);\n        console.log(\"Opponent Hero\", op_health, op_attack, op_defence, op_score, color);\n        if (myScore > op_score) {\n            console.log(\"You win!, The token is now yours.\");\n            this.mint(color);\n        } else {\n            console.log(\"You Loose. Better Luck next time.  \");\n        }\n    }\n\n    render() {\n        if (this.state.account) {\n            return (\n                <div>\n                    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                        <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#/\" target=\"_self\" rel=\"noopener noreferrer\">\n                            An AF Tea\n                        </a>\n                        <ul className=\"navbar-nav px-3\">\n                            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                                <small className=\"text-white\">\n                                    <span id=\"account\">Account: {this.state.account}</span>\n                                </small>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n                            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n                                <div className=\"content mr-auto ml-auto\">\n                                    <h1>Issue Hero Token</h1>\n                                    <form\n                                        onSubmit={(event) => {\n                                            event.preventDefault();\n                                            let color = this.state.Heros[0];\n                                            let colorExists = true;\n                                            while (colorExists) {\n                                                color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n                                                colorExists = false;\n                                                for (var i = 0; i < this.state.Heros.length; i++)\n                                                    if (this.state.Heros[i].color === color) {\n                                                        colorExists = true;\n                                                        break;\n                                                    }\n                                            }\n                                            if (this.countMint()) this.mint(color);\n                                            // window.location.reload();\n                                        }}\n                                    >\n                                        <input type=\"submit\" className=\"btn btn-block btn-primary\" value={\"MINT  (\" + this.state.totalSupply + \" / 30)\"} />\n                                    </form>\n                                </div>\n                            </main>\n                        </div>\n                        <hr />\n                        <div className=\"row text-center\">\n                            {this.state.Heros.map((hero, key) => {\n                                if (hero.owner === this.state.account) {\n                                    return (\n                                        <div key={key} className=\"col-md-3 mb-3\">\n                                            <div className=\"a\">\n                                                <div className=\"token\">\n                                                    <Logo fill={hero.color} stroke=\"black\" strokeWidth=\"2px\" width=\"50%\" height=\"50%\" />\n                                                </div>\n                                                <div className=\"heroHex\">\n                                                    {hero.color}\n                                                    <div className=\"b\">\n                                                        <h6>Health: {+hero.health}</h6>\n                                                        <h6>Attack: {+hero.attack}</h6>\n                                                        <h6>Defence: {+hero.defence}</h6>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    );\n                                }\n                            })}\n                        </div>\n                    </div>\n\n                    <div>\n                        <form\n                            onSubmit={(event) => {\n                                event.preventDefault();\n\n                                if (state.button === 1) {\n                                    const index = this.index.value;\n                                    this.fight(index);\n                                }\n                                if (state.button === 2) {\n                                    console.log(\"Button 2 clicked!\");\n                                }\n                            }}\n                        >\n                            <input\n                                type=\"text\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Enter index of one of the token to fight. (Default = 0)\"\n                                ref={(input) => {\n                                    this.index = input;\n                                }}\n                            />\n                            <button onClick={() => (this.state.button = 1)} type=\"submit\" name=\"btn1\" value=\"wow\">\n                                FIGHT\n                            </button>\n                            <button onClick={() => (this.state.button = 2)} type=\"submit\" name=\"btn2\" value=\"oh no\">\n                                SELL\n                            </button>\n                            <input type=\"submit\" className=\"btn btn-block btn-primary\" value=\"FIGHT\" />\n                        </form>\n                    </div>\n                </div>\n            );\n        } else {\n            return <div>Login & verify your Metamask account.</div>;\n        }\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}