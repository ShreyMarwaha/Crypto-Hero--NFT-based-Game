{"ast":null,"code":"import _regeneratorRuntime from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Color from \"../abis/Color.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (color) {\n      console.log(color);\n\n      _this.state.contract.methods.mint(color).send({\n        from: _this.state.account\n      }).once(\"receipt\", function (receipt) {\n        _this.setState({\n          colors: [].concat(_toConsumableArray(_this.state.colors), [color])\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"\",\n      contract: null,\n      totalSupply: 0,\n      Heros: []\n    };\n    return _this;\n  }\n  /**► Called on server side, as soon as component mounts */\n\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n    /**▶ Checking for Metamask Installation for login */\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                //the old way\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } //not found\n                else {\n                    window.alert(\"Non-Ethereum browser derected. You should consider trying MetaMask!\");\n                  }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, abi, address, contract, totalSupply, i, hero;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkData = Color.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                abi = Color.abi;\n                address = networkData.address;\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 16;\n                return contract.methods.totalSupply().call();\n\n              case 16:\n                totalSupply = _context3.sent;\n                this.setState(totalSupply); //load colors\n\n                i = 0;\n\n              case 19:\n                if (!(i < totalSupply)) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                _context3.next = 22;\n                return contract.methods.allHero(i).call();\n\n              case 22:\n                hero = _context3.sent;\n                // const ownerAddr = await contract.methods.owner(i).call();\n                console.log(\"from:\", ownerAddr);\n                this.setState({\n                  hero: [].concat(_toConsumableArray(this.state.hero), [hero])\n                });\n                console.log(this.state.colors);\n\n              case 26:\n                i++;\n                _context3.next = 19;\n                break;\n\n              case 29:\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert(\"Smart contract not deployed to detected network.\");\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.account) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"nav\", {\n          className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n          href: \"http://www.google.com\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Color Tokens\"), React.createElement(\"ul\", {\n          className: \"navbar-nav px-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          className: \"text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          id: \"account\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Account: \", this.state.account))))), React.createElement(\"div\", {\n          className: \"container-fluid mt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"main\", {\n          role: \"main\",\n          className: \"col-lg-12 d-flex text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content mr-auto ml-auto\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Issue Token\"), React.createElement(\"form\", {\n          onSubmit: function onSubmit(event) {\n            event.preventDefault();\n            var color = _this2.color.value;\n\n            _this2.mint(color);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: \"fomr-control mb-1\",\n          placeholder: \"eg. #FFFFFF\",\n          ref: function ref(input) {\n            return _this2.color = input;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-block btn-primary\",\n          value: \"MINT\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }))))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"row text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, this.state.colors.map(function (color, key) {\n          return React.createElement(\"div\", {\n            key: key,\n            className: \"col-md-3 mb-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"token\",\n            style: {\n              backgroundColor: color\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, color));\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Login & verify your Metamask account.\");\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/shrey/Desktop/IBC-project-ARS/IBC/Nft/src/components/App.js"],"names":["React","Component","Web3","Color","App","props","mint","color","console","log","state","contract","methods","send","from","account","once","receipt","setState","colors","totalSupply","Heros","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","abi","address","Contract","call","i","allHero","hero","ownerAddr","event","preventDefault","value","input","map","key","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport Color from \"../abis/Color.json\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: \"\",\n            contract: null,\n            totalSupply: 0,\n            Heros: []\n        };\n    }\n\n    /**► Called on server side, as soon as component mounts */\n    async componentWillMount() {\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n\n    /**▶ Checking for Metamask Installation for login */\n    async loadWeb3() {\n        //new way\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        }\n        //the old way\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        }\n        //not found\n        else {\n            window.alert(\n                \"Non-Ethereum browser derected. You should consider trying MetaMask!\"\n            );\n        }\n    }\n    async loadBlockchainData() {\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        this.setState({ account: accounts[0] });\n\n        const networkId = await web3.eth.net.getId();\n        const networkData = Color.networks[networkId];\n        if (networkData) {\n            const abi = Color.abi;\n            const address = networkData.address;\n            const contract = new web3.eth.Contract(abi, address);\n            this.setState({ contract });\n            const totalSupply = await contract.methods.totalSupply().call();\n            this.setState(totalSupply);\n            //load colors\n            for (var i = 0; i < totalSupply; i++) {\n                const hero = await contract.methods.allHero(i).call();\n                // const ownerAddr = await contract.methods.owner(i).call();\n                console.log(\"from:\", ownerAddr);\n                this.setState({\n                    hero: [...this.state.hero, hero]\n                });\n                console.log(this.state.colors);\n            }\n        } else {\n            window.alert(\"Smart contract not deployed to detected network.\");\n        }\n    }\n    mint = (color) => {\n        console.log(color);\n        this.state.contract.methods\n            .mint(color)\n            .send({ from: this.state.account })\n            .once(\"receipt\", (receipt) => {\n                this.setState({\n                    colors: [...this.state.colors, color]\n                });\n            });\n    };\n\n    render() {\n        if (this.state.account) {\n            return (\n                <div>\n                    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                        <a\n                            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n                            href=\"http://www.google.com\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Color Tokens\n                        </a>\n                        <ul className=\"navbar-nav px-3\">\n                            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                                <small className=\"text-white\">\n                                    <span id=\"account\">\n                                        Account: {this.state.account}\n                                    </span>\n                                </small>\n                            </li>\n                        </ul>\n                    </nav>\n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n                            <main\n                                role=\"main\"\n                                className=\"col-lg-12 d-flex text-center\"\n                            >\n                                <div className=\"content mr-auto ml-auto\">\n                                    <h1>Issue Token</h1>\n                                    <form\n                                        onSubmit={(event) => {\n                                            event.preventDefault();\n                                            const color = this.color.value;\n                                            this.mint(color);\n                                        }}\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            className=\"fomr-control mb-1\"\n                                            placeholder=\"eg. #FFFFFF\"\n                                            ref={(input) =>\n                                                (this.color = input)\n                                            }\n                                        />\n                                        <input\n                                            type=\"submit\"\n                                            className=\"btn btn-block btn-primary\"\n                                            value=\"MINT\"\n                                        />\n                                    </form>\n                                </div>\n                            </main>\n                        </div>\n                        <hr />\n                        <div className=\"row text-center\">\n                            {this.state.colors.map((color, key) => {\n                                return (\n                                    <div key={key} className=\"col-md-3 mb-3\">\n                                        <div\n                                            className=\"token\"\n                                            style={{ backgroundColor: color }}\n                                        ></div>\n                                        <div>{color}</div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return <div>Login & verify your Metamask account.</div>;\n        }\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}